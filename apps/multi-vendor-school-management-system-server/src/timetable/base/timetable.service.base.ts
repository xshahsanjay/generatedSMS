/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Timetable as PrismaTimetable } from "@prisma/client";

export class TimetableServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TimetableCountArgs, "select">
  ): Promise<number> {
    return this.prisma.timetable.count(args);
  }

  async timetables(
    args: Prisma.TimetableFindManyArgs
  ): Promise<PrismaTimetable[]> {
    return this.prisma.timetable.findMany(args);
  }
  async timetable(
    args: Prisma.TimetableFindUniqueArgs
  ): Promise<PrismaTimetable | null> {
    return this.prisma.timetable.findUnique(args);
  }
  async createTimetable(
    args: Prisma.TimetableCreateArgs
  ): Promise<PrismaTimetable> {
    return this.prisma.timetable.create(args);
  }
  async updateTimetable(
    args: Prisma.TimetableUpdateArgs
  ): Promise<PrismaTimetable> {
    return this.prisma.timetable.update(args);
  }
  async deleteTimetable(
    args: Prisma.TimetableDeleteArgs
  ): Promise<PrismaTimetable> {
    return this.prisma.timetable.delete(args);
  }
}
